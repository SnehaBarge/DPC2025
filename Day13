public class LongestPalindromicSubstring {

    private int start = 0;
    private int maxLength = 0;

    public String longestPalindrome(String s) {
        if (s == null || s.length() < 2) {
            return s;
        }

        for (int i = 0; i < s.length(); i++) {
            // Odd length palindrome
            expandAroundCenter(s, i, i);
            // Even length palindrome
            expandAroundCenter(s, i, i + 1);
        }

        return s.substring(start, start + maxLength);
    }

    private void expandAroundCenter(String s, int left, int right) {
        while (left >= 0 && right < s.length() && s.charAt(left) == s.charAt(right)) {
            left--;
            right++;
        }
        int currentLength = right - left - 1;
        if (currentLength > maxLength) {
            maxLength = currentLength;
            start = left + 1;
        }
    }

    public static void main(String[] args) {
        LongestPalindromicSubstring solution = new LongestPalindromicSubstring();
        
        String s1 = "babad";
        System.out.println("Input: \"" + s1 + "\", Longest Palindrome: \"" + solution.longestPalindrome(s1) + "\""); 
        
        String s2 = "cbbd";
        System.out.println("Input: \"" + s2 + "\", Longest Palindrome: \"" + solution.longestPalindrome(s2) + "\""); 
        
        String s3 = "a";
        System.out.println("Input: \"" + s3 + "\", Longest Palindrome: \"" + solution.longestPalindrome(s3) + "\""); 
    }
}
