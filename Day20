import java.util.Stack;
import java.util.Collections;

public class SortStackRecursive {

    public void sortStack(Stack<Integer> stack) {
        if (stack.isEmpty()) {
            return;
        }

        int temp = stack.pop();
        sortStack(stack);
        sortedInsert(stack, temp);
    }

    private void sortedInsert(Stack<Integer> stack, int element) {
        if (stack.isEmpty() || element > stack.peek()) {
            stack.push(element);
            return;
        }

        int top = stack.pop();
        sortedInsert(stack, element);
        stack.push(top);
    }

    public static void main(String[] args) {
        SortStackRecursive sorter = new SortStackRecursive();

        Stack<Integer> myStack = new Stack<>();
        myStack.push(3);
        myStack.push(1);
        myStack.push(4);
        myStack.push(2);

        System.out.println("Original Stack (top to bottom): " + myStack);
        
        sorter.sortStack(myStack);

        System.out.println("Sorted Stack (top to bottom): " + myStack);
    }
}
