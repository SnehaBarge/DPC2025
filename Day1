import java.util.Arrays;

public class SortArray {
    public void sort(int[] arr) {
        if (arr == null || arr.length < 2) {
            return;
        }

        int low = 0;   // Pointer for the 0s section
        int mid = 0;   // Pointer for the current element
        int high = arr.length - 1; // Pointer for the 2s section

        while (mid <= high) {
            switch (arr[mid]) {
                case 0:
                    swap(arr, low, mid);
                    low++;
                    mid++;
                    break;

                case 1:
                    mid++;
                    break;

                case 2:
                    swap(arr, mid, high);
                    high--;
                    break;
            }
        }
    }
    private void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    public static void main(String[] args) {
        SortArray sorter = new SortArray();
        int[] exampleArray = {2, 0, 1, 2, 1, 0, 0, 2};
        
        System.out.println("Original array: " + Arrays.toString(exampleArray));
        sorter.sort(exampleArray);
        System.out.println("Sorted array:   " + Arrays.toString(exampleArray));
    }
}
