import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Permutations {

    public List<String> permute(String s) {
        List<String> result = new ArrayList<>();
        char[] chars = s.toCharArray();
        Arrays.sort(chars);
        boolean[] used = new boolean[chars.length];
        
        backtrack(result, new StringBuilder(), chars, used);
        
        return result;
    }

    private void backtrack(List<String> result, StringBuilder currentPermutation, char[] chars, boolean[] used) {
        if (currentPermutation.length() == chars.length) {
            result.add(currentPermutation.toString());
            return;
        }

        for (int i = 0; i < chars.length; i++) {
            if (used[i] || (i > 0 && chars[i] == chars[i - 1] && !used[i - 1])) {
                continue;
            }
            
            used[i] = true;
            currentPermutation.append(chars[i]);
            backtrack(result, currentPermutation, chars, used);
            currentPermutation.deleteCharAt(currentPermutation.length() - 1);
            used[i] = false;
        }
    }

    public static void main(String[] args) {
        Permutations generator = new Permutations();

        String s1 = "abc";
        System.out.println("Permutations of \"" + s1 + "\": " + generator.permute(s1));
        
        String s2 = "aab";
        System.out.println("Permutations of \"" + s2 + "\": " + generator.permute(s2));
    }
}
